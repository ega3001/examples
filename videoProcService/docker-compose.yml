version: '3'
services:
  nginx-proxy:
    image: nginx
    container_name: nginx-proxy
    env_file:
      - .env
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    
  procs-endpoint:
    image: procs-endpoint
    env_file:
      - .env
    expose:
      - ${PROCS_END_PORT}
    build:
      context: ./procs-endpoint
      dockerfile: Dockerfile
    depends_on:
      - redis-server
      - celery-worker
      - minio-server
      - pg-server

  celery-worker:
    image: celery-worker
    env_file:
      - .env
    build:
      context: ./celery-worker
      dockerfile: Dockerfile
    depends_on:
      - redis-server
      - pg-server
      - minio-server

  redis-server:
    container_name: redis-server
    image: redis:alpine
    expose:
      - ${REDIS_SERVER_PORT}
    command: redis-server --port ${REDIS_SERVER_PORT}
    
  minio-server:
    image: minio/minio
    container_name: minio-server
    expose:
      - ${MINIO_SERVER_PORT}
    ports:
      - "9090:${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - /s3/minio_data:/data
    command: minio server /data --address ":${MINIO_SERVER_PORT}" --console-address ":${MINIO_CONSOLE_PORT}"

  pg-server:
    image: postgres:15
    container_name: pg-server
    expose:
      - ${POSTGRES_PORT}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    command: postgres -c tcp_keepalives_idle=600 -c tcp_keepalives_interval=30 -c tcp_keepalives_count=10 -p ${POSTGRES_PORT}
  